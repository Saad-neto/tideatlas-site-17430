# üåä Configura√ß√£o Local - T√°bua de Mar√©s
# Copie este arquivo para .env e configure suas chaves

# ========================================
# API DE MAR√âS
# ========================================

# Escolha o provedor: 'mock', 'stormglass' ou 'worldtides'
# mock = dados simulados (gr√°tis, funciona offline)
# stormglass = dados reais (50 requests/dia gr√°tis)
# worldtides = dados reais ($0.01/request)
VITE_TIDE_PROVIDER=stormglass

# ========================================
# STORMGLASS.IO (RECOMENDADO)
# ========================================
# 1. Crie conta gr√°tis: https://stormglass.io/
# 2. Copie sua API key do dashboard
# 3. Cole aqui:
VITE_STORMGLASS_API_KEY=cole-sua-key-aqui

# ========================================
# WORLDTIDES (ALTERNATIVA PAGA)
# ========================================
# 1. Crie conta: https://www.worldtides.info/
# 2. Adicione cr√©ditos ($5 m√≠nimo)
# 3. Copie sua API key
# 4. Cole aqui:
VITE_WORLDTIDES_API_KEY=

# ========================================
# CACHE
# ========================================
# Tempo em MINUTOS que os dados ficam em cache
# Recomendado: 120-180 min (economiza requests da API)
VITE_CACHE_DURATION=120

# ========================================
# GOOGLE ADSENSE (FUTURO)
# ========================================
VITE_ADSENSE_CLIENT_ID=

# ========================================
# GOOGLE ANALYTICS (FUTURO)
# ========================================
VITE_GA4_MEASUREMENT_ID=

# ========================================
# NOTAS IMPORTANTES
# ========================================
# - NUNCA fa√ßa commit do arquivo .env
# - Use .env para desenvolvimento local
# - Use vari√°veis de ambiente do Vercel/Netlify em produ√ß√£o
# - Com cache de 120min e 22 cidades: ~12-15 requests/dia
# - Limite Stormglass gr√°tis: 50 requests/dia
#
# Para testar sua API key antes de usar:
#   node test-api.js stormglass SUA_KEY_AQUI
